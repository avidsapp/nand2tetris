// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in=sel[0], out=notsel0);
    Not(in=sel[1], out=notsel1);
    Not(in=sel[2], out=notsel2);
    And(a=notsel0, b=notsel1, out=sela1);
    And(a=sela1, b=notsel2, out=selA);
    And(a=selA, b=in, out=a);
    And(a=sel[0], b=notsel1, out=selb1);
    And(a=selb1, b=notsel2, out=selB);
    And(a=selB, b=in, out=b);
    And(a=notsel0, b=sel[1], out=selc1);
    And(a=selc1, b=notsel2, out=selC);
    And(a=selC, b=in, out=c);
    And(a=sel[0], b=sel[1], out=seld1);
    And(a=seld1, b=notsel2, out=selD);
    And(a=selD, b=in, out=d);
    And(a=notsel0, b=notsel1, out=sele1);
    And(a=sele1, b=sel[2], out=selE);
    And(a=selE, b=in, out=e);
    And(a=sel[0], b=notsel1, out=self1);
    And(a=self1, b=sel[2], out=selF);
    And(a=selF, b=in, out=f);
    And(a=notsel0, b=sel[1], out=selg1);
    And(a=selg1, b=sel[2], out=selG);
    And(a=selG, b=in, out=g);
    And(a=sel[0], b=sel[1], out=selh1);
    And(a=selh1, b=sel[2], out=selH);
    And(a=selH, b=in, out=h);
}
